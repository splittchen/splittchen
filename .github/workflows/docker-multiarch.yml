name: Build Multi-Arch Docker Image (Optimized)

# OPTIMIZED VERSION: Only builds on version tags and manual triggers
# This saves GitHub Actions minutes and time
# Regular commits won't trigger builds - use local builds for development

on:
  push:
    tags:
      - 'v*.*.*'  # Only build on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Target platforms (comma-separated)'
        required: false
        default: 'linux/amd64,linux/arm64'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write  # Required for build attestation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=true
          flavor: |
            latest=auto

      - name: Determine platforms
        id: platforms
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.platforms }}" ]; then
            echo "platforms=${{ github.event.inputs.platforms }}" >> $GITHUB_OUTPUT
          else
            echo "platforms=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ steps.platforms.outputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      - name: Image digest
        run: |
          echo "Image digest: ${{ steps.build-and-push.outputs.digest }}"
          echo ""
          echo "Built for platforms: ${{ steps.platforms.outputs.platforms }}"
          echo ""
          echo "Tags created:"
          echo "${{ steps.meta.outputs.tags }}" | sed 's/^/  - /'

      - name: Inspect image
        run: |
          echo "Inspecting multi-arch manifest..."
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
