# Flask Configuration
FLASK_APP=flask_cli.py
SECRET_KEY=your-secure-secret-key-32-characters-minimum

# Database - PostgreSQL only
DATABASE_URL=postgresql://splittchen:secure-password@db:5432/splittchen
POSTGRES_DB=splittchen
POSTGRES_USER=splittchen
POSTGRES_PASSWORD=change-me-in-production

# Email Configuration (Generic SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_USE_TLS=true
FROM_EMAIL=your-email@gmail.com

# Application Settings
BASE_URL=https://yourdomain.com

# Security Settings
# Enable secure cookies (requires HTTPS) - set to true for production with HTTPS
# Only enable this if you have HTTPS configured (reverse proxy, SSL termination, etc.)
SECURE_COOKIES=false

# Logging Configuration
# Configurable log levels for different environments and monitoring needs
# LOG_LEVEL options: DEBUG, INFO, WARNING, ERROR, CRITICAL
#
# DEBUG: Detailed troubleshooting information
#   - Participant verification details
#   - SMTP configuration details (for debugging email issues)
#   - Detailed application flow information
#   - Use for: Development and debugging
#
# INFO: Normal operational information (recommended for most deployments)
#   - Group creation and deletion events
#   - Participant joins and admin access
#   - Successful email deliveries
#   - Scheduler operations and settlements
#   - Use for: Production monitoring with operational visibility
#
# WARNING: Security events and unexpected conditions
#   - Unauthorized access attempts
#   - Email rate limit violations
#   - Invalid authentication attempts
#   - Session security issues
#   - Use for: Production security monitoring
#
# ERROR: Critical system failures only
#   - Database connection failures
#   - Email delivery failures
#   - Scheduler errors
#   - Use for: Minimal logging, error alerts only
#
# Production recommendations:
# - Development/Testing: LOG_LEVEL=DEBUG
# - Staging: LOG_LEVEL=INFO
# - Production (normal): LOG_LEVEL=INFO
# - Production (security focus): LOG_LEVEL=WARNING
LOG_LEVEL=INFO

# Currency Settings
# Default currency for new groups (region-specific examples):
# North America: USD, CAD
# Europe: EUR, GBP, CHF, SEK, NOK, DKK, PLN, CZK, HUF
# Asia-Pacific: JPY, CNY, AUD, NZD, SGD, HKD, KRW, INR
# Other: BRL, RUB
DEFAULT_CURRENCY=USD

# Background Automation
# The scheduler is always enabled and handles:
# - Recurring group settlements (monthly auto-settlement)
# - Group expiration handling (automatic settlement and closure)
# - Settlement reminders (3-day advance notifications)

# Container Timezone (standard Linux TZ variable)
# Set your local timezone for the entire container
# Examples: UTC, Europe/Vienna, America/New_York, Asia/Tokyo
TZ=UTC

# Scheduler Times
# Daily settlement time (24-hour format HH:MM)
SCHEDULER_SETTLEMENT_TIME=23:30
# Daily reminder time (24-hour format HH:MM)
SCHEDULER_REMINDER_TIME=09:00

# Email Rate Limiting
# Disable rate limiting for testing (set to false to disable all limits)
EMAIL_RATE_LIMITING_ENABLED=true

# Email Rate Limiting Thresholds (per 24 hours PER GROUP)
# Note: Limits are now PER-GROUP to prevent abuse within specific groups
# while allowing normal usage across different groups

# Settlement reminders (per email address per group)
EMAIL_LIMIT_REMINDER=1
# Settlement reports (per email address per group)  
EMAIL_LIMIT_SETTLEMENT=5
# Group invitations (per email address per group)
EMAIL_LIMIT_INVITATION=25
# Group creation confirmations (per email address - global, no group context)
EMAIL_LIMIT_GROUP_CREATED=19
# Total emails per email address per group per day
EMAIL_LIMIT_TOTAL_DAILY=50

# Docker Configuration
# User permissions (adjust for your system)
DOCKER_USER=1000
DOCKER_GROUP=1000

# Data storage path
DATA_PATH=./data